<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "DataManager.convertJsonToSharer(AnyObject) -&gt; [Sharer]:DataManager.swift">
      </ContextState>
      <ContextState
         contextName = "LoginViewControllerNew.animateTextField(Bool) -&gt; ():LoginViewControllerNew.swift">
         <PersistentStrings>
            <PersistentString
               value = "kbHeight">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginViewControllerNew.(getFBUserData(LoginViewControllerNew) -&gt; () -&gt; ()).(closure #1).(closure #1):LoginViewControllerNew.swift">
      </ContextState>
      <ContextState
         contextName = "CirclesTableViewController.(reloadData(CirclesTableViewController) -&gt; () -&gt; ()).(closure #1).(closure #1):CirclesTableViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.sharesInGroups">
            </PersistentString>
            <PersistentString
               value = "DataManager.sharedInstance.myUser">
            </PersistentString>
            <PersistentString
               value = "sharerServer">
            </PersistentString>
            <PersistentString
               value = "DataManager.sharedInstance.allGroup">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataManager.createJsonFile(String, json : AnyObject) -&gt; ():DataManager.swift">
      </ContextState>
      <ContextState
         contextName = "LoginViewControllerNew.(loginButton(LoginViewControllerNew) -&gt; (AnyObject) -&gt; ()).(closure #1):LoginViewControllerNew.swift">
      </ContextState>
      <ContextState
         contextName = "ActiveGroupTableViewCell.collectionView(UICollectionView, numberOfItemsInSection : Int) -&gt; Int:ActiveGroupTableViewCell.swift">
      </ContextState>
      <ContextState
         contextName = "CirclesTableViewController.tableView(UITableView, cellForRowAtIndexPath : NSIndexPath) -&gt; UITableViewCell:CirclesTableViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.allSharers">
            </PersistentString>
            <PersistentString
               value = "DataManager.sharedInstance.allGroup">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapGoogleViewController.mapView(GMSMapView!, didTapInfoWindowOfMarker : GMSMarker!) -&gt; ():MapGoogleViewController.swift">
      </ContextState>
      <ContextState
         contextName = "DataManager.convertJsonToUser(AnyObject) -&gt; [User]:DataManager.swift">
      </ContextState>
      <ContextState
         contextName = "MapGoogleViewController.locationManager(CLLocationManager, didUpdateToLocation : CLLocation, fromLocation : CLLocation) -&gt; ():MapGoogleViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.end">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CirclesTableViewController.(reloadData(CirclesTableViewController) -&gt; () -&gt; ()).(closure #1).(closure #1).(closure #2):CirclesTableViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.sharesInGroups">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "specialized _allocateUninitializedArray&lt;A&gt; (Builtin.Word) -&gt; ([A], Builtin.RawPointer):(null)">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.sharesInGroups">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginViewControllerNew.(getFBUserData(LoginViewControllerNew) -&gt; () -&gt; ()).(closure #1):LoginViewControllerNew.swift">
      </ContextState>
      <ContextState
         contextName = "DataManager.(requestFacebook(DataManager) -&gt; ((result : NSMutableArray) -&gt; ()) -&gt; ()).(closure #1):DataManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "friendsDictionaryFace">
            </PersistentString>
            <PersistentString
               value = "DataManager.sharedInstance.friendsArray">
            </PersistentString>
            <PersistentString
               value = "friendsDictionaryFace[&quot;data&quot;]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CreateGroupViewController.(continueAction(CreateGroupViewController) -&gt; () -&gt; ()).(closure #1).(closure #1):CreateGroupViewController.swift">
      </ContextState>
      <ContextState
         contextName = "DataManager.updateLocationUsers(GMSMapView) -&gt; ():DataManager.swift">
      </ContextState>
      <ContextState
         contextName = "EditGroupViewController.tableView(UITableView, cellForRowAtIndexPath : NSIndexPath) -&gt; UITableViewCell:EditGroupViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.selectedSharer">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataManager.(requestUsersInGroupId(DataManager) -&gt; (String, completion : (users : [User]) -&gt; ()) -&gt; ()).(closure #1):DataManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.allGroup[0].users">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CirclesTableViewController.reloadData() -&gt; ():CirclesTableViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.friendsArray ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "myInfoViewController.animateTextField(Bool) -&gt; ():myInfoViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "keyboardControl">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CirclesTableViewController.viewDidLoad() -&gt; ():CirclesTableViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.friendsArray">
            </PersistentString>
            <PersistentString
               value = "DataManager.sharedInstance.myUser">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CirclesTableViewController.tableView(UITableView, numberOfRowsInSection : Int) -&gt; Int:CirclesTableViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.allGroup">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DataManager.linkGroupAndUserToSharer((result : String) -&gt; ()) -&gt; ():DataManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "DataManager.sharedInstance.allGroup">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
